# Generated by Django 4.0.2 on 2022-11-02 05:30

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('accounts', '0010_photo'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Photo',
        ),
        migrations.AddField(
            model_name='attendance',
            name='student_no',
            field=models.CharField(default='Forgotten', max_length=200),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='block_section',
            field=models.CharField(default='Forgotten', max_length=200),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='course',
            field=models.CharField(default='Forgotten', max_length=200),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='grade_year',
            field=models.CharField(default='Forgotten', max_length=200),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='student_name',
            field=models.CharField(default='Forgotten', max_length=200),
        ),
        migrations.AlterField(
            model_name='attendance',
            name='sub',
            field=models.CharField(default='Forgotten', max_length=200),
        ),
        migrations.AlterField(
            model_name='student',
            name='classrooms',
            field=models.ManyToManyField(blank=True, related_name='students', to='accounts.Classroom'),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
